import type { BindingsObserver } from "./BindingsObserver";
import type { InteractionBinder } from "../binder/InteractionBinder";
import type { Interaction } from "../interaction/Interaction";
import type { WidgetData } from "../interaction/WidgetData";
import type { InteractionUpdateBinder } from "../binder/InteractionUpdateBinder";
import type { SrcTgtPointsData } from "../interaction/SrcTgtPointsData";
import type { TouchData } from "../interaction/TouchData";
import type { MultiTouchData } from "../interaction/MultiTouchData";
import type { TapData } from "../interaction/TapData";
import type { PointData } from "../interaction/PointData";
import type { ScrollData } from "../interaction/ScrollData";
import type { PointsData } from "../interaction/PointsData";
import type { KeyInteractionBinder } from "../binder/KeyInteractionBinder";
import type { KeyData } from "../interaction/KeyData";
import type { KeyInteractionUpdateBinder } from "../binder/KeyInteractionUpdateBinder";
import type { KeysData } from "../interaction/KeysData";
import type { BaseUpdateBinder } from "../binder/BaseUpdateBinder";
import type { Widget } from "../binder/BaseBinderBuilder";
import type { Binding } from "./Binding";
import type { Undo } from "../../impl/command/library/Undo";
import type { Redo } from "../../impl/command/library/Redo";
import type { UndoHistory } from "../undo/UndoHistory";
import type { Logger } from "../logging/Logger";
export declare type PartialButtonBinder = InteractionBinder<Interaction<WidgetData<HTMLButtonElement>>, WidgetData<HTMLButtonElement>>;
export declare type PartialInputBinder = InteractionBinder<Interaction<WidgetData<HTMLInputElement>>, WidgetData<HTMLInputElement>>;
export declare type PartialSelectBinder = InteractionBinder<Interaction<WidgetData<HTMLSelectElement>>, WidgetData<HTMLSelectElement>>;
export declare type PartialSpinnerBinder = InteractionUpdateBinder<Interaction<WidgetData<HTMLInputElement>>, WidgetData<HTMLInputElement>>;
export declare type PartialAnchorBinder = InteractionBinder<Interaction<WidgetData<HTMLAnchorElement>>, WidgetData<HTMLAnchorElement>>;
export declare type PartialTextInputBinder = InteractionUpdateBinder<Interaction<WidgetData<HTMLInputElement | HTMLTextAreaElement>>, WidgetData<HTMLInputElement | HTMLTextAreaElement>>;
export declare type PartialTouchSrcTgtBinder = InteractionUpdateBinder<Interaction<SrcTgtPointsData<TouchData>>, SrcTgtPointsData<TouchData>>;
export declare type PartialMultiTouchBinder = InteractionUpdateBinder<Interaction<MultiTouchData>, MultiTouchData>;
export declare type PartialTapBinder = InteractionUpdateBinder<Interaction<TapData>, TapData>;
export declare type PartialTouchBinder = InteractionUpdateBinder<Interaction<TouchData>, TouchData>;
export declare type PartialPointBinder = InteractionBinder<Interaction<PointData>, PointData>;
export declare type PartialScrollBinder = InteractionBinder<Interaction<ScrollData>, ScrollData>;
export declare type PartialUpdatePointBinder = InteractionUpdateBinder<Interaction<PointData>, PointData>;
export declare type PartialPointsBinder = InteractionUpdateBinder<Interaction<PointsData>, PointsData>;
export declare type PartialPointSrcTgtBinder = InteractionUpdateBinder<Interaction<SrcTgtPointsData<PointData>>, SrcTgtPointsData<PointData>>;
export declare type PartialKeyBinder = KeyInteractionBinder<Interaction<KeyData>, KeyData>;
export declare type PartialKeysBinder = KeyInteractionUpdateBinder<Interaction<KeysData>, KeysData>;
export declare abstract class Bindings {
    abstract readonly undoHistory: UndoHistory;
    abstract readonly logger: Logger;
    abstract nodeBinder(): BaseUpdateBinder;
    abstract buttonBinder(): PartialButtonBinder;
    abstract checkboxBinder(): PartialInputBinder;
    abstract colorPickerBinder(): PartialInputBinder;
    abstract comboBoxBinder(): PartialSelectBinder;
    abstract spinnerBinder(): PartialSpinnerBinder;
    abstract dateBinder(): PartialInputBinder;
    abstract hyperlinkBinder(): PartialAnchorBinder;
    abstract textInputBinder(timeout?: number): PartialTextInputBinder;
    abstract touchDnDBinder(): PartialTouchSrcTgtBinder;
    abstract multiTouchBinder(nbTouches: number): PartialMultiTouchBinder;
    abstract tapBinder(nbTap: number): PartialTapBinder;
    abstract longTouchBinder(duration: number): PartialTouchBinder;
    abstract swipeBinder(horizontal: boolean, minVelocity: number, minLength: number, pxTolerance: number): PartialTouchSrcTgtBinder;
    abstract panBinder(horizontal: boolean, minLength: number, pxTolerance: number): PartialTouchSrcTgtBinder;
    abstract clickBinder(): PartialPointBinder;
    abstract dbleClickBinder(): PartialUpdatePointBinder;
    abstract pressBinder(): PartialPointBinder;
    abstract longPressBinder(duration: number): PartialUpdatePointBinder;
    abstract clicksBinder(nbClicks: number): PartialPointsBinder;
    abstract mouseoverBinder(withBubbling: boolean): PartialPointBinder;
    abstract mouseoutBinder(withBubbling: boolean): PartialPointBinder;
    abstract mousemoveBinder(): PartialPointBinder;
    abstract scrollBinder(): PartialScrollBinder;
    abstract dndBinder(cancellable: boolean): PartialPointSrcTgtBinder;
    abstract dragLockBinder(): PartialPointSrcTgtBinder;
    abstract keyPressBinder(modifierAccepted: boolean): PartialKeyBinder;
    abstract keysPressBinder(): PartialKeysBinder;
    abstract keysTypeBinder(): PartialKeysBinder;
    abstract keyTypeBinder(): PartialKeyBinder;
    abstract undoRedoBinder(undo: Widget<HTMLButtonElement>, redo: Widget<HTMLButtonElement>): [
        Binding<Undo, Interaction<WidgetData<HTMLButtonElement>>, WidgetData<HTMLButtonElement>>,
        Binding<Redo, Interaction<WidgetData<HTMLButtonElement>>, WidgetData<HTMLButtonElement>>
    ];
    abstract clear(): void;
    abstract setBindingObserver(obs?: BindingsObserver): void;
}
